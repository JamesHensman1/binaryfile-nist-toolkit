import json
import numpy as np

from subprocess import Popen, PIPE


def conditioning(nin, H):
    H = np.min([8.0, H])
    stdout, err = Popen(
        ["ea_conditioning", "-v", str(8 * nin), "256", "256", str(H * nin)],
        stdout=PIPE,
    ).communicate()
    output = stdout.decode("utf-8").split("\n")[-2]
    if output[0] != "e":
        return False
    ext = float(output.split("^")[1].split(")")[0][1:])
    return ext < -32


def to_nin(H):
    nin = 40
    while not conditioning(nin, H) and nin < 150:
        nin += 1
    return nin


# These files must first be generated by non_iid.py
with open("Ambient.json") as file:
    data = [min(8 * item["bitstring"], item["original"]) for item in json.load(file)]
    nins = [to_nin(H) for H in data]
    print(nins)
with open("75deg.json") as file:
    data = [min(8 * item["bitstring"], item["original"]) for item in json.load(file)]
    nins = [to_nin(H) for H in data]
    print(nins)
